name: ci

on:
  push:
    paths:
      - "**/*.rs"
      - "Cargo.lock"
      - "Cargo.toml"
      - ".dockerignore"
      - "Dockerfile"
      - ".github/workflows/docker-image.yml"
      - ".sqlx/*.json"
      - ".kamal/secrets"
      - "config/deploy.yml"
    branches:
      - "main"
    tags:
      - "v*"
  release:
    types: [published]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/j1nxie/jane-doe

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            GIT_SHA=${{ github.sha }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install Kamal
        run: gem install kamal

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy with Kamal
        env:
          VERSION: latest
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

          GELBOORU_API_KEY: ${{ secrets.GELBOORU_API_KEY }}
          GELBOORU_USER_ID: ${{ secrets.GELBOORU_USER_ID }}

          DANBOORU_API_KEY: ${{ secrets.DANBOORU_API_KEY }}
          DANBOORU_LOGIN: ${{ secrets.DANBOORU_LOGIN }}

          RULE34_API_KEY: ${{ secrets.RULE34_API_KEY }}
          RULE34_USER_ID: ${{ secrets.RULE34_USER_ID }}

          TAILSCALE_HOST: ${{ secrets.TAILSCALE_HOST }}
        run: kamal deploy --skip-push
